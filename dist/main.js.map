{"version":3,"file":"main.js","mappings":"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","sources":["webpack://seasons_beatings/./src/scripts/game_object.js","webpack://seasons_beatings/./src/scripts/entity.js","webpack://seasons_beatings/./src/scripts/keyboard.js","webpack://seasons_beatings/./src/scripts/player.js","webpack://seasons_beatings/./src/scripts/game.js","webpack://seasons_beatings/./src/scripts/game_view.js","webpack://seasons_beatings/webpack/bootstrap","webpack://seasons_beatings/webpack/runtime/define property getters","webpack://seasons_beatings/webpack/runtime/hasOwnProperty shorthand","webpack://seasons_beatings/webpack/runtime/make namespace object","webpack://seasons_beatings/./src/index.js"],"sourcesContent":["class GameObject {\n    constructor(canvas, id, pos = [0, 0]) {\n        this.id = id;\n        this.pos = pos;\n        this.left = () => this.pos[0];\n        this.right = () => this.pos[0] + this.width;\n        this.top = () => this.pos[1];\n        this.bottom = () => this.pos[1] + this.height;\n        this.canvas = canvas;\n        this.ctx = canvas.getContext(\"2d\");\n        this.render = this.render.bind(this)\n        this.fullWidth = 50;\n        this.fullHeight = 50;\n        this.width = this.fullHeight;\n        this.height = this.fullWidth;\n    }\n\n    render() {\n        this.ctx.fillStyle = 'red';\n        this.ctx.fillRect(\n            this.pos[0], // x coordinate\n            this.pos[1], // y coordinate\n            this.width, // width\n            this.height // height\n        )\n    }\n\n    update() {\n        this.pos = this.getMove();\n        this.render();\n    }\n\n    // resize() {\n    //     this.pos[0] = Math.floor(this.canvas.dataset.scale * this.pos[0]);\n    //     this.pos[1] = Math.floor(this.canvas.dataset.scale * this.pos[1]);\n    //     this.width = this.canvas.dataset.scale * this.fullWidth;\n    //     this.height = this.canvas.dataset.scale * this.fullHeight;\n    // }\n\n}\n\nexport default GameObject;","import GameObject from \"./game_object\";\n\nclass Entity extends GameObject {\n    constructor(canvas, id, pos = [0, 0]) {\n        super(canvas, id, pos);\n        this.render = this.render.bind(this)\n        this.fullWidth = 50;\n        this.fullHeight = 50;\n        this.width = canvas.dataset.scale * this.fullHeight;\n        this.height = canvas.dataset.scale * this.fullWidth;\n    }\n\n    \n\n}\n\nexport default Entity;","class Keyboard {\n    constructor() {\n        this.keyMap = {};\n\n        this.getMove = this.getMove.bind(this);\n        this.lastPressed;\n        this.lastReleased;\n        \n        document.addEventListener(\"keydown\", (e) => {\n            e = e || event;\n            if (e.repeat) return;\n            this.keyMap[e.code] = (e.type === 'keydown');\n            this.lastPressed = e.code;\n        });\n\n        document.addEventListener(\"keyup\", (e) => {\n            e = e || event;\n            if (e.repeat) return;\n            this.keyMap[e.code] = (e.type === 'keydown');\n            this.lastReleased = e.code;\n        });\n    }\n    \n\n    getMove() {\n        let dirArrStr = JSON.stringify([\n            !!this.keyMap[\"ArrowUp\"] || !!this.keyMap[\"KeyW\"],\n            !!this.keyMap[\"ArrowLeft\"] || !!this.keyMap[\"KeyA\"],\n            !!this.keyMap[\"ArrowDown\"] || !!this.keyMap[\"KeyS\"],\n            !!this.keyMap[\"ArrowRight\"] || !!this.keyMap[\"KeyD\"]\n        ]);\n        if (dirArrStr === '[true,false,false,false]' || dirArrStr === '[true,true,false,true]') return \"u\";\n        if (dirArrStr === '[false,true,false,false]' || dirArrStr === '[true,true,true,false]') return \"l\";\n        if (dirArrStr === '[false,false,true,false]' || dirArrStr === '[false,true,true,true]') return \"d\";\n        if (dirArrStr === '[false,false,false,true]' || dirArrStr === '[true,false,true,true]') return \"r\";\n        if (dirArrStr === '[true,true,false,false]') return \"ul\";\n        if (dirArrStr === '[true,false,false,true]') return \"ur\";\n        if (dirArrStr === '[false,true,true,false]') return \"dl\";\n        if (dirArrStr === '[false,false,true,true]') return \"dr\";\n        if ([\n            '[false,false,false,false]',\n            '[true,true,true,true]',\n            '[true,false,true,false]',\n            '[false,true,false,true]'\n        ].some(map => map === dirArrStr)) {\n                return \"s\";\n        }\n    }\n}\n\n\nexport default Keyboard;","import Entity from \"./entity.js\";\nimport Keyboard from \"./keyboard.js\";\n\nclass Player extends Entity {\n    constructor(canvas, id, pos = [0, 0]) {\n        super(canvas, id, pos);\n        this.keyboard = new Keyboard();\n        // this.fullWidth = 25;\n        // this.fullHeight = 25;\n        this.width = 25;\n        this.height = 25;\n        this.speed = 2;\n        this.render = this.render.bind(this);\n        this.update = this.update.bind(this);\n        this.getMove = this.getMove.bind(this);\n        this.enforceBounds = this.enforceBounds.bind(this);\n    }\n    \n\n    facing() {\n        switch(this.keyboard.lastPressed) {\n            case \"ArrowUp\":\n            case \"KeyW\":\n                return \"u\";\n            case \"ArrowLeft\":\n            case \"KeyA\":\n                return \"l\";\n            case undefined:\n            case \"ArrowDown\":\n            case \"KeyS\":\n                return \"d\";\n            case \"ArrowRight\":\n            case \"KeyD\":\n                return \"r\";\n        }\n    }\n\n    enforceBounds(newPos) {\n        newPos = newPos.map((coord, i = 0) => {\n            if (i === 0) {\n                if (coord < 0) return 0;\n                if (coord + this.width > this.canvas.width) return this.canvas.width - this.width;\n            } else {\n                if (coord < 0) return 0;\n                if (coord + this.height > this.canvas.height) return this.canvas.height - this.height;\n            }\n            i++;\n            return coord;\n        });\n        return newPos;\n    }\n\n    getMove() {\n        let dir = this.keyboard.getMove();\n        let newPos;\n        switch(dir) {\n            case \"u\":\n                newPos = [this.pos[0], (this.pos[1] - this.speed)];\n                break;\n            case \"l\":\n                newPos = [(this.pos[0] - this.speed), this.pos[1]];\n                break;\n            case \"d\":\n                newPos = [this.pos[0], (this.pos[1] + this.speed)];\n                break;\n            case \"r\":\n                newPos = [(this.pos[0] + this.speed), this.pos[1]];\n                break;\n            case \"ul\":\n                newPos = [(this.pos[0] - this.speed), (this.pos[1] - this.speed)];\n                break;\n            case \"ur\":\n                newPos = [(this.pos[0] + this.speed), (this.pos[1] - this.speed)];\n                break;\n            case \"dl\":\n                newPos = [(this.pos[0] - this.speed), (this.pos[1] + this.speed)];\n                break;\n            case \"dr\":\n                newPos = [(this.pos[0] + this.speed), (this.pos[1] + this.speed)];\n                break; \n            case \"s\":\n                newPos = this.pos;\n        }\n        return this.enforceBounds(newPos);\n    }\n\n}\n\nexport default Player;","import Entity from \"./entity\";\nimport Player from \"./player\";\n\nclass Game {\n    constructor(canvas) {\n        this.canvas = canvas;\n        // this.ctx = this.canvas.getContext(\"2d\");\n        // this.redraw = this.redraw.bind(this);\n        // this.spawnObject = this.spawnObject.bind(this);\n        this.gameObjects = [];\n\n        // let player = new Player(this.gameObjects.length);\n\n        this.player = new Player(canvas, this.gameObjects.length);\n        this.gameObjects.push(this.player);\n\n        // this.spawnObject(\"player\")\n        // this.spawnObject(\"player\", [50, 50])\n    }\n\n    // redraw() {\n    //     this.gameObjects.forEach((object) => {\n    //         object.render()\n    //     })\n    // }\n\n    // spawnObject(type = \"entity\", pos = [0, 0]) {\n    //     switch (type) {\n    //         case \"entity\":\n    //             this.gameObjects.push(new Entity(this.gameObjects.length), pos);\n    //             break;\n    //         case \"player\":\n    //             if (this.gameObjects.every((entity) => entity.constructor.name !== \"Player\")) {\n    //                 this.gameObjects.push(new Player(this.gameObjects.length, pos));\n    //             }\n    //             break;\n    //     }\n    // }\n}\n\nexport default Game;","import Game from \"./game\"\nimport Player from \"./player\";\n\nclass GameView {\n    constructor(game, canvas) {\n        this.game = game;\n        this.canvas = canvas;\n        this.ctx = canvas.getContext(\"2d\");\n        this.gameRender = this.gameRender.bind(this);\n        this.gameRender();\n        }\n\n    gameRender = function() {\n        // console.log(this.game.player);\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        requestAnimationFrame(this.gameRender);\n        this.game.gameObjects.forEach((gameObject) => {\n            gameObject.update();\n            // console.log(`[${gameObject.constructor.name}]: \n            // left: ${gameObject.left()}, right: ${gameObject.right()} \n            // top: ${gameObject.top()}, bottom: ${gameObject.bottom()}`)\n        })\n    }\n\n    // resize() {\n    //     this.game.gameObjects.forEach((object) => {\n    //         object.resize();\n    //     })\n    // }\n}\n\nexport default GameView;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const { default: Game } = require(\"./scripts/game\");\nconst { default: GameView } = require(\"./scripts/game_view\");\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    let canvas = document.getElementById(\"game-canvas\");\n    let ctx = canvas.getContext(\"2d\");\n\n    canvas.dataset.maxWidth = 900;\n    \n    // visualViewport.addEventListener(\"resize\", onresize);\n\n    // let maxWidth = parseInt(canvas.dataset.maxWidth);\n    \n    // let targetWidth = Math.floor(.60 * window.innerWidth);\n    // canvas.width = targetWidth > maxWidth ? maxWidth : targetWidth;\n    // canvas.height = Math.floor(.60 * canvas.width);\n    // canvas.dataset.scale = canvas.width / maxWidth;\n\n    canvas.width = canvas.dataset.maxWidth;\n    canvas.height = (.60 * canvas.width);\n    \n    let game = new Game(canvas)\n    let gameView = new GameView(game, canvas);\n\n    // canvas.addEventListener('click', (evt) => {\n    //     let mousePos = getMousePos(canvas, evt);\n      \n    //     if (isInside(mousePos, rect)) {\n    //       alert('clicked inside rect');\n    //     } else {\n    //       alert('clicked outside rect');\n    //     }\n    // }, false);\n\n    // function onresize(e) {\n    //     targetWidth = Math.floor(.60 * window.innerWidth);\n    //     canvas.width = targetWidth > maxWidth ? maxWidth : targetWidth;\n    //     canvas.height = Math.floor(.60 * canvas.width);\n    //     canvas.dataset.scale = canvas.width / maxWidth;\n    //     gameView.resize();\n    // }\n\n    // function getMousePos(canvas, event) {\n    //     let rect = canvas.getBoundingClientRect();\n    //     return {\n    //       x: event.clientX - rect.left,\n    //       y: event.clientY - rect.top,\n    //     };\n    // }\n\n//     function isInside(pos, rect) {\n//         return pos.x > rect.x && pos.x < rect.x + rect.width && pos.y < rect.y + rect.height && pos.y > rect.y\n//     }\n\n//    function makeFullScreen() {\n//         if (canvas.requestFullscreen) {\n//             canvas.requestFullscreen();\n//         } else if (canvas.mozRequestFullScreen) { // Firefox\n//             canvas.mozRequestFullScreen();\n//         } else if (canvas.webkitRequestFullscreen) { // Chrome, Safari and Opera\n//             canvas.webkitRequestFullscreen();\n//         } else if (canvas.msRequestFullscreen) { // IE/Edge\n//             canvas.msRequestFullscreen();\n//         }\n//     }\n\n//     function FullScreenButton(rect, lWidth, fillColor, lineColor) {\n//         const context = canvas.getContext(\"2d\");\n//         context.beginPath();\n//         context.rect(rect.x, rect.y, rect.width, rect.height);\n//         context.fillStyle = fillColor;\n//         context.fill();\n//         context.lineWidth = lWidth;\n//         context.strokeStyle = '#000000';\n//         context.stroke();\n//         context.closePath();\n//     }\n//     canvas.append(new FullScreenButton(rect, 2, \"black\"));\n})"],"names":["constructor","canvas","id","pos","arguments","length","undefined","this","left","right","width","top","bottom","height","ctx","getContext","render","bind","fullWidth","fullHeight","fillStyle","fillRect","update","getMove","GameObject","super","dataset","scale","keyMap","lastPressed","lastReleased","document","addEventListener","e","event","repeat","code","type","dirArrStr","JSON","stringify","some","map","Entity","keyboard","Keyboard","speed","enforceBounds","facing","newPos","_this","coord","i","gameObjects","player","Player","push","game","gameRender","clearRect","requestAnimationFrame","forEach","gameObject","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","default","Game","require","GameView","getElementById","maxWidth"],"sourceRoot":""}